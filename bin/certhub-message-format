#!/bin/sh

set -e
set -u

# Required binaries
BASENAME=/usr/bin/basename
ECHO=/bin/echo
OPENSSL=/usr/bin/openssl
XARGS=/usr/bin/xargs

# Print usage message and exit.
usage() {
    ${ECHO} "${0}: /path/to/certhub/instance.example.com command [args...]"
    return 1
}

certhub_message_subject() {
    if [ -n "${CERTHUB_MESSAGE_SUBJECT:-}" ]; then
        ${ECHO} "${CERTHUB_MESSAGE_SUBJECT}"
    else
        INSTANCE_BASE=$(${BASENAME} "${1}")
        COMMAND_BASE=$(${BASENAME} "${2}")

        ${ECHO} "${CERTHUB_MESSAGE_SUBJECT_PREFIX:-[Certhub]} ${CERTHUB_MESSAGE_ACTION_NAME:-${COMMAND_BASE}} ${CERTHUB_MESSAGE_INSTANCE_NAME:-${INSTANCE_BASE}}"
    fi
}

certhub_message_format() {
    INSTANCE_DIR="${1}"
    SUBJECT=$(certhub_message_subject "${1}" "${2}")
    CERT_LOGOPTS="${CERTHUB_CERT_LOGOPTS:--noout -text -certopt no_pubkey,no_sigdump,no_extensions -sha256 -fingerprint}"
    FC_PATH="${INSTANCE_DIR}/${CERTHUB_FULLCHAIN_NAME:-fullchain.pem}"
    REQ_LOGOPTS="${CERTHUB_REQ_LOGOPTS:--noout -text -reqopt no_pubkey,no_sigdump}"
    REQ_PATH="${INSTANCE_DIR}/${CERTHUB_CSR_NAME:-csr.pem}"
    shift 1

    ${ECHO} "${SUBJECT}"
    ${ECHO}

    "${@}" 2>&1

    if [ -f "${REQ_PATH}" ] && [ -n "${REQ_LOGOPTS}" ]; then
        ${ECHO} "${REQ_LOGOPTS}" | ${XARGS} ${OPENSSL} req -in "${REQ_PATH}"
        ${ECHO}
    fi

    if [ -f "${FC_PATH}" ] && [ -n "${CERT_LOGOPTS}" ]; then
        ${ECHO} "${CERT_LOGOPTS}" | ${XARGS} ${OPENSSL} x509 -in "${FC_PATH}"
        ${ECHO}
    fi
}

if [ "${#}" -gt 1 ] && [ "${1:-}" != "-h" ] && [ "${1:-}" != "--help" ]; then
    certhub_message_format "${@}"
else
    usage
fi
